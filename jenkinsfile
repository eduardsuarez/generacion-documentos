pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'generador-documentos'
        DOCKER_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                // Obtener c칩digo de GitHub
                git branch: 'main',
                    url: 'https://github.com/eduardsuarez/generacion-documentos.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Construir imagen Docker
                    docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}")
                }
            }
        }

        /**
        stage('Quality Check') {
            steps {
                script {
                    docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").inside {
                        // An치lisis est치tico
                        sh 'flake8 src/'
                        sh 'black --check src/'
                        sh 'mypy src/'
                    }
                }
            }
        }
        **/
        stage('Deploy') {
            steps {
                // Desplegar el contenedor en local
                sh '''
                    docker run -d \
                    -v ${WORKSPACE}/tmp:/generacion-documentos/tmp \
                        ${DOCKER_IMAGE}:${DOCKER_TAG}
                '''
            }
        }
    }

    post {
        always {
            // Limpiar workspace
            cleanWs()
            sh 'docker rm -f $(docker ps -aq)'
        }
        success {
            echo 'Pipeline ejecutado exitosamente!'
        }
        failure {
            echo 'Pipeline fall칩'
        }
    }
}
